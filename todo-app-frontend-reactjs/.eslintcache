[{"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\index.js":"1","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\App.js":"2","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\reportWebVitals.js":"3","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\TodoApp.jsx":"4","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\service\\TodoListServices.js":"5","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\TodoNavBar.jsx":"6","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\todo\\TodoComponent.jsx":"7","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\todo\\ListTodoComponent.jsx":"8","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\user\\ListUserComponent.jsx":"9","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\user\\UserComponent.jsx":"10","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\service\\UserListServices.js":"11","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\buildings\\BuildingComponent.jsx":"12","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\service\\BuildingListServices.js":"13","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\buildings\\ListBuildingsComponent.jsx":"14","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\utilities\\AppFooter.js":"15","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\todo\\TodoFilterComponent.jsx":"16"},{"size":500,"mtime":1610322845330,"results":"17","hashOfConfig":"18"},{"size":263,"mtime":1610633386501,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":3704,"mtime":1610905031579,"results":"21","hashOfConfig":"18"},{"size":763,"mtime":1610905031582,"results":"22","hashOfConfig":"18"},{"size":1971,"mtime":1610790109273,"results":"23","hashOfConfig":"18"},{"size":10136,"mtime":1610838152550,"results":"24","hashOfConfig":"18"},{"size":3646,"mtime":1610905031572,"results":"25","hashOfConfig":"18"},{"size":3217,"mtime":1610789929225,"results":"26","hashOfConfig":"18"},{"size":4882,"mtime":1610779761919,"results":"27","hashOfConfig":"18"},{"size":724,"mtime":1610483013385,"results":"28","hashOfConfig":"18"},{"size":4630,"mtime":1610779805128,"results":"29","hashOfConfig":"18"},{"size":807,"mtime":1610485621413,"results":"30","hashOfConfig":"18"},{"size":3492,"mtime":1610777174937,"results":"31","hashOfConfig":"18"},{"size":311,"mtime":1610740503966,"results":"32","hashOfConfig":"18"},{"size":6879,"mtime":1610905031574,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"11pz6iq",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\index.js",[],["72","73"],"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\App.js",[],"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\reportWebVitals.js",[],"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\TodoApp.jsx",["74","75"],"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\service\\TodoListServices.js",[],"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\TodoNavBar.jsx",["76"],"\r\nimport React, { Component } from 'react';\r\nimport { Navbar , Nav, NavDropdown} from 'react-bootstrap'\r\nimport { BrowserRouter as Router , Link} from 'react-router-dom'\r\n\r\n\r\nclass TodoNavBar extends Component {\r\n    render() {\r\n        return (<> \r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" className=\"customNavBar\" variant=\"dark\">\r\n            <Navbar.Brand href=\"##\"> Golden Real Estate </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <NavDropdown title=\"Properties\" id=\"collasible-nav-dropdown\">\r\n                    <Link to=\"/buildings/-1\">\r\n                        <NavDropdown.Item href=\"/buildings/-1\">Add Property </NavDropdown.Item>\r\n                    </Link>\r\n                    <NavDropdown.Divider />\r\n                    <Link to=\"/buildings/\">\r\n                        <NavDropdown.Item href=\"/buildings/\">View Property</NavDropdown.Item>\r\n                    </Link>\r\n                </NavDropdown>\r\n                <NavDropdown title=\" User Management\" id=\"collasible-nav-dropdown\">\r\n                    <Link to=\"/user/-1\">\r\n                        <NavDropdown.Item href=\"/user/-1\">Add User </NavDropdown.Item>\r\n                    </Link>\r\n                    <Link to=\"/user/\">\r\n                        <NavDropdown.Item href=\"/user/\">View Users</NavDropdown.Item>\r\n                    </Link>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Project\" id=\"collasible-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"/todo/-1\">Add Todo </NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/todo/\">View Todo</NavDropdown.Item>\r\n                </NavDropdown>\r\n                </Nav>\r\n                \r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n           \r\n              </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoNavBar","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\todo\\TodoComponent.jsx",["77","78","79","80"],"import React, { Component } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport TodoListServices from '../../service/TodoListServices';\r\nimport {  Row, Col } from 'react-bootstrap';\r\nimport BuildingListServices from '../../service/BuildingListServices';\r\nimport UserListServices from '../../service/UserListServices';\r\nclass TodoComponent extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            description: '',\r\n            buildings: [] , \r\n            users: [],\r\n            buildings1: [] , \r\n            users1: [],\r\n            projectProgress :'NEW' \r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n            \r\n        this.fetchDependencies();\r\n        if (this.state.id == -1) {\r\n            return\r\n        }\r\n       this.fetchProjectInformation();\r\n\r\n    }\r\n\r\n    fetchDependencies() {\r\n        let buildings = [];\r\n        BuildingListServices.retrieveAllBuildings() //HARDCODED\r\n            .then(\r\n                response => {\r\n                    console.log(\"Response from Retrieve Buildings : {} \", response.data);\r\n                    this.setState({ buildings: response.data });\r\n                }\r\n            );\r\n        UserListServices.retrieveAllUsers() //HARDCODED\r\n            .then(\r\n                response => {\r\n                    console.log(\"Response from Retrieve Users : {} \", response.data);\r\n                    this.setState({ users: response.data });\r\n                }\r\n            );\r\n    }\r\n\r\n    fetchProjectInformation() {\r\n        TodoListServices.retrieveTodo(this.state.id)\r\n            .then(response => this.setState({\r\n                id: response.data.id,\r\n                name: response.data.name,\r\n                description: response.data.description,\r\n                buildings1: [response.data.building],\r\n                users1: [response.data.user] ,\r\n                projectProgress : response.data.projectProgress\r\n            }));\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.name) {\r\n            errors.description = 'Enter a Project Name'\r\n        } else if (!values.description) {\r\n            errors.description = 'Enter Project Description'\r\n        }\r\n\r\n        return errors\r\n\r\n    }\r\n\r\n    onSubmit(values) {\r\n        \r\n        let todo = {\r\n            id: this.state.id,\r\n            name: values.name,\r\n            description: values.description,\r\n            buildingId : values.buildingName,\r\n            userId : values.userName,\r\n            projectProgress : values.projectProgress\r\n        }\r\n\r\n        if (this.state.id === -1) {\r\n            TodoListServices.createTodo(todo)\r\n                .then(() => this.props.history.push('/todo/-1'))\r\n        } else {\r\n            TodoListServices.updateTodo(this.state.id, todo)\r\n                .then(() => this.props.history.push('/todo'))\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        let { description, name, id, buildingName, buildingId, userId,projectProgress} = this.state\r\n       // let { description, name, id, buildingName} = this.state\r\n        let stateCondition = this.state.id == -1 ? \"Add Project\" : \"Edit Project\"\r\n        this.state.buildings.map((building) => buildingId=building.id)\r\n        this.state.users.map((user) =>userId=user.id)\r\n        this.state.buildings1.map((building) => buildingId=building.id)\r\n        this.state.users1.map((user) =>userId=user.id)\r\n        return (\r\n            <div className=\"container\">\r\n                 <h4> {stateCondition}</h4>\r\n                <div className=\"containerForm\">\r\n                    <Formik\r\n                        initialValues={{ id, name, description,buildingName, buildingName:buildingId, userName:userId, projectProgress:projectProgress   }}\r\n                        //initialValues={{ id, name, description,buildingName}}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                        \r\n                    >\r\n                        {\r\n                           \r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\" />\r\n                                   \r\n                                    <fieldset className=\"form-group\">\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"id2\" hidden />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <Row>\r\n                                        <Col>\r\n                                        <label>Project Name</label>\r\n                                        </Col> <Col>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"name\" />\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <Row>\r\n                                        <Col>\r\n                                        <label>Project Description</label>\r\n                                        </Col> <Col>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <Row>\r\n                                        <Col>\r\n                                        <label htmlFor=\"building\">Building Name</label>\r\n                                        </Col> <Col>\r\n                                          <Field className=\"form-control\"\r\n                                                component=\"select\"\r\n                                                id=\"buildingName\"\r\n                                                name=\"buildingName\"\r\n                                                multiple={false}\r\n                                                selectedOption={buildingId}\r\n                                            >\r\n                                            {this.state.buildings.map((building) => <option key={building.id}  value={building.id} >{building.buildingName}</option>)}\r\n                                             </Field>\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <Row>\r\n                                        <Col>\r\n                                        <label htmlFor=\"assigned\">Assigned to</label>\r\n                                        </Col> <Col>\r\n                                          <Field className=\"form-control\"\r\n                                                component=\"select\"\r\n                                                id=\"userName\"\r\n                                                name=\"userName\"\r\n                                                multiple={false}\r\n                                                selectedOption={userId}\r\n                                            >\r\n                                            {this.state.users.map((user) => <option key={user.id} value={user.id} >{user.userName}</option>)}\r\n                                            \r\n                                             </Field>\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <Row>\r\n                                        <Col>\r\n                                        <label htmlFor=\"status\">Status</label>\r\n                                        </Col> <Col>\r\n                                          <Field className=\"form-control\"\r\n                                                component=\"select\"\r\n                                                id=\"projectProgress\"\r\n                                                name=\"projectProgress\"\r\n                                                multiple={false}\r\n                                                selectedOption=\"INPROGRESS\"\r\n                                            >\r\n                                             <option  key=\"NEW\"  value=\"NEW\" >New</option>\r\n                                             <option  key=\"INPROGRESS\" value=\"INPROGRESS\" >In Progress</option>\r\n                                             <option key=\"COMPLETED\" value=\"COMPLETED\" >Completed</option>\r\n                                            \r\n                                             </Field>\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }       \r\n}\r\n\r\nexport default TodoComponent","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\todo\\ListTodoComponent.jsx",[],"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\user\\ListUserComponent.jsx",[],"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\user\\UserComponent.jsx",["81","82"],"import React, { Component } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport UserListServices from '../../service/UserListServices';\r\nimport { Row , Col} from 'react-bootstrap'\r\nclass UserComponent extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            userName: '' ,\r\n            userEmail: ''\r\n        }\r\n        \r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log(this.state.id)\r\n\r\n        // eslint-disable-next-line\r\n        if (this.state.id == -1) {\r\n            return\r\n        }\r\n\r\n        UserListServices.retrieveUser(this.state.id)\r\n            .then(response => this.setState({\r\n                userName: response.data.userName,\r\n                userEmail: response.data.userEmail\r\n            }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.userName) {\r\n            errors.userName = 'Enter User Name'\r\n        } else if (!values.userEmail ) {\r\n            errors.description = 'Enter valid email for the User'\r\n        } \r\n\r\n        return errors\r\n\r\n    }\r\n\r\n     handleReset = (resetForm) => {\r\n        if (window.confirm('Reset?')) {\r\n          resetForm();\r\n        }\r\n      };\r\n\r\n    onSubmit(values) {\r\n\r\n        let users = {\r\n            id: this.state.id,\r\n            userName: values.userName,\r\n            userEmail: values.userEmail\r\n        }\r\n\r\n        if (this.state.id === -1) {\r\n            UserListServices.createUser(users)\r\n                .then(() => this.props.history.push('/user/-1'))\r\n        } else {\r\n            UserListServices.updateUser(this.state.id, users)\r\n                .then(() => this.props.history.push('/user'))\r\n        }\r\n\r\n        console.log(values);\r\n    }\r\n\r\n    render() {\r\n\r\n        let { userName, userEmail, id } = this.state\r\n        let stateCondition = this.state.id == -1 ? \"Add User\" : \"Edit User\"\r\n        return (\r\n            <div className=\"container\">\r\n                <h4> {stateCondition} </h4> \r\n                <div className=\"containerForm\">\r\n                    <Formik\r\n                        initialValues={{ id, userName, userEmail }}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                           \r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                        <label>Username</label>\r\n                                        </Col><Col>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"userName\" />\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                        <label>UserEmail</label>\r\n                                        </Col><Col>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"userEmail\" />\r\n                                        </Col></Row>\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                    &nbsp;  \r\n                                     <button  className=\"btn btn-warning\"  type=\"reset\"\r\n                                    onClick={this.handleReset.bind(null, props.resetForm)}\r\n                                    type=\"button\"\r\n                                  >\r\n                                    Reset\r\n                                  </button>\r\n                                </Form>\r\n                              \r\n                            )\r\n                        }\r\n                    </Formik>\r\n                   \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }       \r\n}\r\n\r\nexport default UserComponent","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\service\\UserListServices.js",[],"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\buildings\\BuildingComponent.jsx",["83"],"import React, { Component } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport BuildingListServices from '../../service/BuildingListServices';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass BuildingComponent extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            buildingName: '' ,\r\n            buildingLocation: ''\r\n        }\r\n        \r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log(this.state.id)\r\n\r\n        // eslint-disable-next-line\r\n        if (this.state.id == -1) {\r\n            return\r\n        }\r\n\r\n        BuildingListServices.retrieveBuilding(this.state.id)\r\n            .then(response => this.setState({\r\n                buildingName: response.data.buildingName,\r\n                buildingLocation: response.data.buildingLocation\r\n            }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.buildingName) {\r\n            errors.buildingName = 'Enter valid building Name'\r\n        } else if (!values.buildingLocation ) {\r\n            errors.buildingLocation = 'Enter a valid building location'\r\n        } \r\n        return errors\r\n\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        let buildings = {\r\n            id: this.state.id,\r\n            buildingName: values.buildingName,\r\n            buildingLocation: values.buildingLocation\r\n        }\r\n\r\n        if (this.state.id === -1) {\r\n            BuildingListServices.createBuilding(buildings)\r\n                .then(() => this.props.history.push('/buildings/-1'))\r\n        } else {\r\n            BuildingListServices.updateBuilding(this.state.id, buildings)\r\n                .then(() => this.props.history.push('/buildings'))\r\n        }\r\n\r\n        console.log(values);\r\n    }\r\n\r\n    render() {\r\n\r\n        let { buildingName, buildingLocation, id } = this.state\r\n        let stateCondition = this.state.id == -1 ? \"Add Property\" : \"Edit Property\"\r\n        return (\r\n            \r\n            <div className=\"container\">\r\n                 <h4>{stateCondition}</h4>\r\n                <div className=\"containerForm\">\r\n                    <Formik\r\n                        initialValues={{ id, buildingName, buildingLocation }}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                           \r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <Row>\r\n                                        <Col>\r\n                                        <label>Property Name</label>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"buildingName\" />\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                        <label>Property Location</label>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"buildingLocation\" />\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }       \r\n}\r\n\r\nexport default BuildingComponent","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\service\\BuildingListServices.js",[],"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\buildings\\ListBuildingsComponent.jsx",["84","85","86"],"import React, { Component } from 'react';\r\nimport BuildingListServices from '../../service/BuildingListServices';\r\nimport { Row , Col, NavDropdown} from 'react-bootstrap'\r\nclass ListBuildingsComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)        \r\n        this.state = {\r\n            buildings: [],\r\n            message: null\r\n        }\r\n        this.refreshBuildings = this.refreshBuildings.bind(this)\r\n        this.deleteBuildingClicked = this.deleteBuildingClicked.bind(this)\r\n        this.updateBuildingClicked = this.updateBuildingClicked.bind(this)\r\n        this.addBuildingsClickeds = this.addBuildingsClickeds.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshBuildings();\r\n    }\r\n\r\n    refreshBuildings() {\r\n        BuildingListServices.retrieveAllBuildings()//HARDCODED\r\n            .then(\r\n                response => {\r\n                    console.log(response);\r\n                    this.setState({ buildings: response.data })\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteBuildingClicked(id, name) {\r\n        BuildingListServices.deleteBuilding(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: `Delete of Building ${name} Successful` })\r\n                    this.refreshBuildings()\r\n                }\r\n            )    \r\n    }\r\n\r\n    updateBuildingClicked(id) {\r\n        this.props.history.push(`/buildings/${id}`)\r\n    }\r\n\r\n    addBuildingsClickeds() {\r\n        this.props.history.push(`/buildings/-1`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n         \r\n            <div className=\"container\">\r\n                   <h4> Properties </h4>\r\n                      <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.addBuildingsClickeds}>Add Property</button>&nbsp;\r\n                    </div>\r\n                    <div className=\"table-container\">\r\n                    <table className=\"table\">\r\n                    <thead>\r\n                            <tr>\r\n                                <th>Id</th>\r\n                                <th>Property Name</th>\r\n                                <th>Property Location</th>\r\n                                <th>&nbsp;</th>\r\n                                <th>&nbsp;</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.buildings.map(\r\n                                    buildings =>\r\n                                        <tr key={buildings.id}>\r\n                                            <td>{buildings.id}</td>\r\n                                            <td>{buildings.buildingName}</td>\r\n                                            <td>{buildings.buildingLocation}</td>\r\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteBuildingClicked(buildings.id , buildings.buildingName)}>Delete</button></td>\r\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateBuildingClicked(buildings.id)}>Update</button></td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n              \r\n            </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default ListBuildingsComponent","C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\utilities\\AppFooter.js",[],"C:\\SagayHome\\PersonalDev\\ClientProjects\\GoldenRealEstate\\GoldenRealEstate\\todo-app-frontend-reactjs\\src\\components\\todo\\TodoFilterComponent.jsx",["87","88","89","90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":18},{"ruleId":"96","severity":1,"message":"100","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":14},{"ruleId":"96","severity":1,"message":"101","line":4,"column":27,"nodeType":"98","messageId":"99","endLine":4,"endColumn":33},{"ruleId":"102","severity":1,"message":"103","line":28,"column":27,"nodeType":"104","messageId":"105","endLine":28,"endColumn":29},{"ruleId":"96","severity":1,"message":"106","line":36,"column":13,"nodeType":"98","messageId":"99","endLine":36,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":103,"column":44,"nodeType":"104","messageId":"105","endLine":103,"endColumn":46},{"ruleId":"107","severity":1,"message":"108","line":113,"column":78,"nodeType":"109","messageId":"105","endLine":113,"endColumn":90},{"ruleId":"102","severity":1,"message":"103","line":77,"column":44,"nodeType":"104","messageId":"105","endLine":77,"endColumn":46},{"ruleId":"110","severity":1,"message":"111","line":119,"column":37,"nodeType":"112","endLine":119,"endColumn":50},{"ruleId":"102","severity":1,"message":"103","line":71,"column":44,"nodeType":"104","messageId":"105","endLine":71,"endColumn":46},{"ruleId":"96","severity":1,"message":"113","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":13},{"ruleId":"96","severity":1,"message":"114","line":3,"column":16,"nodeType":"98","messageId":"99","endLine":3,"endColumn":19},{"ruleId":"96","severity":1,"message":"115","line":3,"column":21,"nodeType":"98","messageId":"99","endLine":3,"endColumn":32},{"ruleId":"96","severity":1,"message":"116","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":27,"column":27,"nodeType":"104","messageId":"105","endLine":27,"endColumn":29},{"ruleId":"96","severity":1,"message":"117","line":99,"column":13,"nodeType":"98","messageId":"99","endLine":99,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":99,"column":44,"nodeType":"104","messageId":"105","endLine":99,"endColumn":46},{"ruleId":"107","severity":1,"message":"108","line":109,"column":78,"nodeType":"109","messageId":"105","endLine":109,"endColumn":90},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'TodoNavBar' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Router' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'buildings' is assigned a value but never used.","no-dupe-keys","Duplicate key 'buildingName'.","ObjectExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Row' is defined but never used.","'Col' is defined but never used.","'NavDropdown' is defined but never used.","'BuildingListServices' is defined but never used.","'stateCondition' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]